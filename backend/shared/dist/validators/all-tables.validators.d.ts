export declare const FORMAT_PATTERNS: {
    DOCTOR_ID: RegExp;
    PATIENT_ID: RegExp;
    APPOINTMENT_ID: RegExp;
    ADMIN_ID: RegExp;
    MEDICAL_RECORD_ID: RegExp;
    PRESCRIPTION_ID: RegExp;
    DEPARTMENT_ID: RegExp;
    ROOM_ID: RegExp;
    UUID: RegExp;
    EMAIL: RegExp;
    PHONE: RegExp;
    URL: RegExp;
    TIME_RANGE: RegExp;
    TIME: RegExp;
    LICENSE_NUMBER: RegExp;
    BLOOD_TYPE: RegExp;
};
export declare const ENUM_VALUES: {
    ROLE: string[];
    GENDER: string[];
    DOCTOR_STATUS: string[];
    PATIENT_STATUS: string[];
    BLOOD_TYPE: string[];
    APPOINTMENT_TYPE: string[];
    APPOINTMENT_STATUS: string[];
    ROOM_TYPE: string[];
    ROOM_STATUS: string[];
    MEDICAL_RECORD_STATUS: string[];
    PRESCRIPTION_STATUS: string[];
};
export declare const RANGES: {
    EXPERIENCE_YEARS: {
        min: number;
        max: number;
    };
    CONSULTATION_FEE: {
        min: number;
        max: number;
    };
    DURATION_MINUTES: {
        min: number;
        max: number;
    };
    ROOM_CAPACITY: {
        min: number;
        max: number;
    };
    TEMPERATURE: {
        min: number;
        max: number;
    };
    HEART_RATE: {
        min: number;
        max: number;
    };
    BLOOD_PRESSURE_SYSTOLIC: {
        min: number;
        max: number;
    };
    BLOOD_PRESSURE_DIASTOLIC: {
        min: number;
        max: number;
    };
    RESPIRATORY_RATE: {
        min: number;
        max: number;
    };
    OXYGEN_SATURATION: {
        min: number;
        max: number;
    };
    WEIGHT: {
        min: number;
        max: number;
    };
    HEIGHT: {
        min: number;
        max: number;
    };
    BMI: {
        min: number;
        max: number;
    };
};
export declare const TABLE_FORMATS: {
    profiles: {
        id: {
            pattern: RegExp;
            required: boolean;
            description: string;
        };
        email: {
            pattern: RegExp;
            required: boolean;
            unique: boolean;
            description: string;
        };
        full_name: {
            required: boolean;
            minLength: number;
            maxLength: number;
            description: string;
        };
        phone_number: {
            pattern: RegExp;
            required: boolean;
            description: string;
        };
        role: {
            enum: string[];
            required: boolean;
            description: string;
        };
        avatar_url: {
            pattern: RegExp;
            required: boolean;
            description: string;
        };
    };
    doctors: {
        doctor_id: {
            pattern: RegExp;
            required: boolean;
            autoGenerated: boolean;
            description: string;
        };
        profile_id: {
            pattern: RegExp;
            required: boolean;
            foreignKey: string;
            description: string;
        };
        license_number: {
            pattern: RegExp;
            required: boolean;
            unique: boolean;
            description: string;
        };
        specialization: {
            required: boolean;
            minLength: number;
            maxLength: number;
            description: string;
        };
        qualification: {
            required: boolean;
            minLength: number;
            maxLength: number;
            description: string;
        };
        experience_years: {
            type: string;
            range: {
                min: number;
                max: number;
            };
            required: boolean;
            description: string;
        };
        consultation_fee: {
            type: string;
            precision: number[];
            range: {
                min: number;
                max: number;
            };
            required: boolean;
            description: string;
        };
        department_id: {
            pattern: RegExp;
            required: boolean;
            foreignKey: string;
            description: string;
        };
        status: {
            enum: string[];
            required: boolean;
            default: string;
            description: string;
        };
        working_hours: {
            type: string;
            structure: string;
            required: boolean;
            description: string;
        };
    };
    patients: {
        patient_id: {
            pattern: RegExp;
            required: boolean;
            autoGenerated: boolean;
            description: string;
        };
        profile_id: {
            pattern: RegExp;
            required: boolean;
            foreignKey: string;
            description: string;
        };
        date_of_birth: {
            type: string;
            required: boolean;
            description: string;
        };
        gender: {
            enum: string[];
            required: boolean;
            description: string;
        };
        blood_type: {
            enum: string[];
            required: boolean;
            description: string;
        };
        address: {
            type: string;
            structure: string;
            required: boolean;
            description: string;
        };
        emergency_contact: {
            type: string;
            structure: string;
            required: boolean;
            description: string;
        };
        insurance_info: {
            type: string;
            structure: string;
            required: boolean;
            description: string;
        };
        allergies: {
            type: string;
            itemType: string;
            required: boolean;
            description: string;
        };
        chronic_conditions: {
            type: string;
            itemType: string;
            required: boolean;
            description: string;
        };
        status: {
            enum: string[];
            required: boolean;
            default: string;
            description: string;
        };
    };
    appointments: {
        appointment_id: {
            pattern: RegExp;
            required: boolean;
            autoGenerated: boolean;
            description: string;
        };
        patient_id: {
            pattern: RegExp;
            required: boolean;
            foreignKey: string;
            description: string;
        };
        doctor_id: {
            pattern: RegExp;
            required: boolean;
            foreignKey: string;
            description: string;
        };
        appointment_datetime: {
            type: string;
            required: boolean;
            description: string;
        };
        duration_minutes: {
            type: string;
            range: {
                min: number;
                max: number;
            };
            required: boolean;
            default: number;
            description: string;
        };
        type: {
            enum: string[];
            required: boolean;
            default: string;
            description: string;
        };
        status: {
            enum: string[];
            required: boolean;
            default: string;
            description: string;
        };
        room_id: {
            pattern: RegExp;
            required: boolean;
            foreignKey: string;
            description: string;
        };
    };
    departments: {
        department_id: {
            pattern: RegExp;
            required: boolean;
            autoGenerated: boolean;
            description: string;
        };
        name: {
            required: boolean;
            unique: boolean;
            minLength: number;
            maxLength: number;
            description: string;
        };
        description: {
            required: boolean;
            maxLength: number;
            description: string;
        };
        head_doctor_id: {
            pattern: RegExp;
            required: boolean;
            foreignKey: string;
            description: string;
        };
        location: {
            required: boolean;
            maxLength: number;
            description: string;
        };
        phone_number: {
            pattern: RegExp;
            required: boolean;
            description: string;
        };
        email: {
            pattern: RegExp;
            required: boolean;
            description: string;
        };
        is_active: {
            type: string;
            required: boolean;
            default: boolean;
            description: string;
        };
    };
    rooms: {
        room_id: {
            pattern: RegExp;
            required: boolean;
            autoGenerated: boolean;
            description: string;
        };
        room_number: {
            required: boolean;
            minLength: number;
            maxLength: number;
            description: string;
        };
        room_type: {
            enum: string[];
            required: boolean;
            description: string;
        };
        department_id: {
            pattern: RegExp;
            required: boolean;
            foreignKey: string;
            description: string;
        };
        capacity: {
            type: string;
            range: {
                min: number;
                max: number;
            };
            required: boolean;
            default: number;
            description: string;
        };
        status: {
            enum: string[];
            required: boolean;
            default: string;
            description: string;
        };
        equipment: {
            type: string;
            structure: string;
            required: boolean;
            description: string;
        };
        location: {
            required: boolean;
            maxLength: number;
            description: string;
        };
        notes: {
            required: boolean;
            maxLength: number;
            description: string;
        };
    };
    medical_records: {
        record_id: {
            pattern: RegExp;
            required: boolean;
            autoGenerated: boolean;
            description: string;
        };
        patient_id: {
            pattern: RegExp;
            required: boolean;
            foreignKey: string;
            description: string;
        };
        doctor_id: {
            pattern: RegExp;
            required: boolean;
            foreignKey: string;
            description: string;
        };
        appointment_id: {
            pattern: RegExp;
            required: boolean;
            foreignKey: string;
            description: string;
        };
        visit_date: {
            type: string;
            required: boolean;
            description: string;
        };
        chief_complaint: {
            required: boolean;
            maxLength: number;
            description: string;
        };
        present_illness: {
            required: boolean;
            maxLength: number;
            description: string;
        };
        past_medical_history: {
            required: boolean;
            maxLength: number;
            description: string;
        };
        physical_examination: {
            type: string;
            structure: string;
            required: boolean;
            description: string;
        };
        vital_signs: {
            type: string;
            structure: string;
            required: boolean;
            description: string;
        };
        diagnosis: {
            required: boolean;
            maxLength: number;
            description: string;
        };
        treatment_plan: {
            required: boolean;
            maxLength: number;
            description: string;
        };
        medications: {
            type: string;
            structure: string;
            required: boolean;
            description: string;
        };
        follow_up_instructions: {
            required: boolean;
            maxLength: number;
            description: string;
        };
        attachments: {
            type: string;
            itemType: string;
            required: boolean;
            description: string;
        };
        status: {
            enum: string[];
            required: boolean;
            default: string;
            description: string;
        };
    };
    prescriptions: {
        prescription_id: {
            pattern: RegExp;
            required: boolean;
            autoGenerated: boolean;
            description: string;
        };
        patient_id: {
            pattern: RegExp;
            required: boolean;
            foreignKey: string;
            description: string;
        };
        doctor_id: {
            pattern: RegExp;
            required: boolean;
            foreignKey: string;
            description: string;
        };
        medical_record_id: {
            pattern: RegExp;
            required: boolean;
            foreignKey: string;
            description: string;
        };
        medications: {
            type: string;
            structure: string;
            required: boolean;
            description: string;
        };
        instructions: {
            required: boolean;
            maxLength: number;
            description: string;
        };
        issued_date: {
            type: string;
            required: boolean;
            default: string;
            description: string;
        };
        valid_until: {
            type: string;
            required: boolean;
            description: string;
        };
        status: {
            enum: string[];
            required: boolean;
            default: string;
            description: string;
        };
    };
};
export declare const JSON_STRUCTURES: {
    address: {
        street: {
            type: string;
            maxLength: number;
        };
        district: {
            type: string;
            maxLength: number;
        };
        city: {
            type: string;
            maxLength: number;
        };
        zipcode: {
            type: string;
            maxLength: number;
        };
    };
    contact: {
        name: {
            type: string;
            required: boolean;
            maxLength: number;
        };
        phone: {
            type: string;
            required: boolean;
            pattern: RegExp;
        };
        relationship: {
            type: string;
            maxLength: number;
        };
    };
    insurance: {
        provider: {
            type: string;
            maxLength: number;
        };
        policy_number: {
            type: string;
            maxLength: number;
        };
        expiry_date: {
            type: string;
        };
    };
    time_schedule: {
        monday: {
            type: string;
            pattern: RegExp;
            optional: boolean;
        };
        tuesday: {
            type: string;
            pattern: RegExp;
            optional: boolean;
        };
        wednesday: {
            type: string;
            pattern: RegExp;
            optional: boolean;
        };
        thursday: {
            type: string;
            pattern: RegExp;
            optional: boolean;
        };
        friday: {
            type: string;
            pattern: RegExp;
            optional: boolean;
        };
        saturday: {
            type: string;
            pattern: RegExp;
            optional: boolean;
        };
        sunday: {
            type: string;
            pattern: RegExp;
            optional: boolean;
        };
    };
    vital_signs: {
        temperature: {
            type: string;
            range: {
                min: number;
                max: number;
            };
        };
        heart_rate: {
            type: string;
            range: {
                min: number;
                max: number;
            };
        };
        blood_pressure: {
            type: string;
            pattern: RegExp;
        };
        respiratory_rate: {
            type: string;
            range: {
                min: number;
                max: number;
            };
        };
        oxygen_saturation: {
            type: string;
            range: {
                min: number;
                max: number;
            };
        };
        weight: {
            type: string;
            range: {
                min: number;
                max: number;
            };
        };
        height: {
            type: string;
            range: {
                min: number;
                max: number;
            };
        };
        bmi: {
            type: string;
            range: {
                min: number;
                max: number;
            };
        };
    };
    examination: {
        general: {
            type: string;
            maxLength: number;
        };
        cardiovascular: {
            type: string;
            maxLength: number;
        };
        respiratory: {
            type: string;
            maxLength: number;
        };
        neurological: {
            type: string;
            maxLength: number;
        };
        musculoskeletal: {
            type: string;
            maxLength: number;
        };
    };
    medications_array: {
        type: string;
        items: {
            name: {
                type: string;
                required: boolean;
                maxLength: number;
            };
            dosage: {
                type: string;
                required: boolean;
                maxLength: number;
            };
            frequency: {
                type: string;
                required: boolean;
                maxLength: number;
            };
            duration: {
                type: string;
                maxLength: number;
            };
            instructions: {
                type: string;
                maxLength: number;
            };
        };
    };
};
export declare const validateFormat: (value: any, fieldConfig: any) => {
    valid: boolean;
    error?: string;
};
export declare const validateTableRecord: (tableName: string, record: any) => {
    valid: boolean;
    errors: Record<string, string>;
};
//# sourceMappingURL=all-tables.validators.d.ts.map