'use client';

import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { CreditCard, Loader2 } from 'lucide-react';

interface DirectPaymentButtonProps {
    amount: number;
    description?: string;
    doctorId?: string;
    doctorName?: string;
    patientId?: string;
    recordId?: string;
    className?: string;
    variant?: 'default' | 'outline' | 'destructive' | 'secondary' | 'ghost' | 'link';
    size?: 'default' | 'sm' | 'lg' | 'icon';
    children?: React.ReactNode;
}

export default function DirectPaymentButton({
    amount,
    description = 'Thanh to√°n kh√°m b·ªánh',
    doctorId,
    doctorName,
    patientId,
    recordId,
    className,
    variant = 'default',
    size = 'default',
    children
}: DirectPaymentButtonProps) {
    const [loading, setLoading] = useState(false);
    const [lastClickTime, setLastClickTime] = useState(0);

    const handleDirectPayment = async () => {
        // Debounce: Prevent multiple clicks within 3 seconds
        const now = Date.now();
        if (now - lastClickTime < 3000) {
            alert('‚è≥ Vui l√≤ng ch·ªù - ƒêang x·ª≠ l√Ω thanh to√°n...');
            return;
        }
        setLastClickTime(now);

        // Validate amount
        if (!amount || amount <= 0) {
            alert('‚ùå L·ªói - S·ªë ti·ªÅn thanh to√°n kh√¥ng h·ª£p l·ªá');
            return;
        }

        setLoading(true);

        try {
            console.log('üöÄ Creating direct payment...', { amount, doctorId, doctorName });

            // Call API to create payment and get PayOS URL
            const response = await fetch('/api/payment/checkout', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    amount,
                    description,
                    doctorId,
                    doctorName,
                    patientId,
                    recordId
                }),
            });

            const data = await response.json();
            console.log('üìä Payment API response:', data);

            if (data.success && data.data?.checkoutUrl) {
                // Show success message
                alert(`‚úÖ T·∫°o thanh to√°n th√†nh c√¥ng! M√£ ƒë∆°n h√†ng: ${data.data.orderCode}`);

                // Redirect directly to PayOS - NO INTERMEDIATE PAGES
                console.log('üîó Redirecting directly to PayOS:', data.data.checkoutUrl);

                // Small delay to show success message
                setTimeout(() => {
                    window.location.href = data.data.checkoutUrl;
                }, 1000);

            } else {
                // Handle API errors
                const errorMessage = data.error?.message || 'Kh√¥ng th·ªÉ t·∫°o thanh to√°n';
                alert(`‚ùå L·ªói thanh to√°n: ${errorMessage}`);
            }

        } catch (error: any) {
            console.error('‚ùå Payment error:', error);
            alert('‚ùå L·ªói k·∫øt n·ªëi - Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn h·ªá th·ªëng thanh to√°n');
        } finally {
            setLoading(false);
        }
    };

    return (
        <Button
            onClick={handleDirectPayment}
            disabled={loading}
            variant={variant}
            size={size}
            className={className}
        >
            {loading ? (
                <>
                    <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                    ƒêang t·∫°o thanh to√°n...
                </>
            ) : children ? (
                children
            ) : (
                <>
                    <CreditCard className="mr-2 h-4 w-4" />
                    Thanh to√°n {amount.toLocaleString('vi-VN')} VNƒê
                </>
            )}
        </Button>
    );
}
